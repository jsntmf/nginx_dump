---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by njcx.
--- DateTime: 2021-06-18 15:14
---

local  util = require("util")
local  client_ip = util.get_client_ip()
local  user_agent = util.get_user_agent()
local  local_time = util.get_localtime()
local  host = util.get_host()  --无端口
local  waf_host = util.get_hostname()
local  req_data = util.get_all_args()
local  req_method = util.get_method()
local  header = util.get_req_header_json()
local  cookie = util.get_cookie_json()
local  config_file = require("config")
local  io = require("io")
local  cjson = require("cjson.safe")
local  string = require("string")

local _M = {}
function _M.waf_resp_log()
    local _, error = pcall(function()

        local log_path = config_file.prod.response_log_dir

        if env == 'dev' then
            log_path = config_file.dev.response_log_dir
        end
        if env == 'demo' then
            log_path = config_file.demo.response_log_dir
        end


        local chunk, eof = ngx.arg[1], ngx.arg[2]
        local buffered = ngx.ctx.buffered
        if not buffered then
            buffered = {}
            ngx.ctx.buffered = buffered
        end
        if  chunk ~= "" then
            buffered[#buffered + 1] = chunk
            ngx.arg[1] = nil
        end
        if eof then
            local whole = table.concat(buffered)
            ngx.ctx.buffered = nil
            ngx.arg[1] = whole

            local log_json_obj = {
                ip = client_ip,
                time = local_time,
                host = host,
                useragent = user_agent,
                req_method =req_method,
                url = url,
                header = header,
                cookie = cookie,
                req_data=req_data,
                waf_host = waf_host,
                body = whole
            }

            local json_text = cjson.encode(log_json_obj) or '{}'
            local log_name = string.format("%s/%s-resp-waf.log", log_path, os.date("%Y-%m-%d"))
            local file = io.open(log_name, "a")
            if file == nil then
                return
            end
            file:write(string.format("%s\n",json_text))
            file:flush()
            file:close()
        end

    end
    )
    if error then
        util.waf_error_log(error)
    end
end

_M.waf_resp_log()

